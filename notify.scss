/*!
 * Notify.js
 * Notify.js is a sleek and powerful toast generator built on CSS3 for a smooth,
 * dependency free customizable experience.
 *
 * @version 1.0.4
 * @author Eliott Robson, https://eliottrobson.me
 * @link https://github.com/eliottrobson/notify.js
 */

$notify-default: #323232 !default;
$nofify-close: #ffeb3b !default;
$notify-info: #00bcd4 !default;
$notify-success: #4caf50 !default;
$notify-warning: #ff9800 !default;
$notify-error: #f44336 !default;
$notify-speed: .3s !default;
$notify-easing: ease-in-out !default;
$notify-area-top: 3rem !default;
$notify-area-right: 3rem !default;
$notify-area-bottom: auto !default;
$notify-area-left: auto !default;
$notify-notification-height-mobile: 6rem !default;
$notify-notification-padding-mobile: 2rem !default;
$notify-notification-width-desktop: 18rem !default;
$notify-notification-height-desktop: 4rem !default;
$notify-notification-padding-desktop: 1rem !default;
$notify-notification-radius: .2rem !default;
$notify-breakpoint: 960px !default;
$notify-enter-animation-mobile: notify-enter-mobile !default;
$notify-exit-animation-mobile: notify-exit-mobile !default;
$notify-enter-push-animation-mobile: notify-enter-push-mobile !default;
$notify-enter-animation-desktop: notify-enter-desktop !default;
$notify-exit-animation-desktop: notify-exit-desktop !default;
$notify-enter-push-animation-desktop: notify-enter-push-desktop !default;
$notify-exit-pull-animation-desktop: notify-exit-pull-desktop !default;

// Enter animation
@keyframes notify-enter-mobile {
	0% {
		transform: translateY($notify-notification-height-mobile);
	}

	100% {
		transform: translateY(0);
	}
}

@keyframes notify-enter-desktop {
	0% {
		transform: translateX($notify-area-right + $notify-notification-width-desktop);
	}

	100% {
		transform: translateX(0);
	}
}

// Push down animation
@keyframes notify-enter-push-mobile {
	0% {
		transform: translateY($notify-notification-height-mobile);
	}

	100% {
		transform: translateY($notify-notification-height-mobile);
	}
}

@keyframes notify-enter-push-desktop {
	0% {
		margin-bottom: -$notify-notification-height-desktop;
	}

	100% {
		margin-bottom: 1rem;
	}
}

// Exit animation
@keyframes notify-exit-mobile {
	0% {
		transform: translateY(0);
	}

	100% {
		opacity: 0;
		transform: translateY($notify-notification-height-mobile);
	}
}

@keyframes notify-exit-desktop {
	0% {
		transform: translateX(0);
	}

	100% {
		opacity: 0;
		transform: translateX($notify-area-right + $notify-notification-width-desktop);
	}
}

// Pull up animation
@keyframes notify-exit-pull-desktop {
	0% {
		margin-bottom: 1rem;
	}

	100% {
		margin-bottom: -$notify-notification-height-desktop;
	}
}

// Functions
@function notify-text-color($color) {
	@if (lightness($color) > 50) {
		@return #000;
	} @else {
		@return #fff;
	}
}

@media (max-width: $notify-breakpoint - 1px) {
	#notify-container {
		position: fixed;
		right: 0;
		bottom: 0;
		left: 0;
		z-index: 99999;
		display: flex;
		flex-direction: column-reverse;

		.notify-notification {
			position: absolute;
			right: 0;
			bottom: 0;
			left: 0;
			height: $notify-notification-height-mobile;
			padding: $notify-notification-padding-mobile;
			line-height: $notify-notification-height-mobile - (2 * $notify-notification-padding-mobile);
			color: notify-text-color($notify-default);
			background-color: $notify-default;
			animation: $notify-enter-animation-mobile $notify-speed $notify-easing forwards;

			// Last notification shouldn't exit
			&:not(:last-child) {
				animation: $notify-exit-animation-mobile $notify-speed $notify-easing forwards !important;
			}

			// When we add a new notification, animate existing down
			& + .notify-notification {
				animation: $notify-enter-push-animation-mobile $notify-speed $notify-easing 0s forwards, $notify-enter-animation-mobile $notify-speed $notify-easing $notify-speed forwards;
			}

			// Animate exit
			&.notify-exit {
				animation: $notify-exit-animation-mobile $notify-speed $notify-easing forwards;
			}
		}

		.notify-close {
			position: absolute;
			top: $notify-notification-padding-mobile - 1rem;
			right: $notify-notification-padding-mobile - 1rem;
			padding: 1rem;
			color: $nofify-close;
			cursor: pointer;

			&::before {
				content: "DISMISS";
			}
		}
	}
}

@media (min-width: $notify-breakpoint) {
	#notify-container {
		position: fixed;
		top: $notify-area-top;
		right: $notify-area-right;
		bottom: $notify-area-bottom;
		left: $notify-area-left;
		z-index: 99999;
		display: flex;
		flex-direction: column-reverse;

		.notify-notification {
			position: relative;
			width: $notify-notification-width-desktop;
			height: $notify-notification-height-desktop;
			padding: $notify-notification-padding-desktop;
			margin-bottom: 1rem;
			line-height: $notify-notification-height-desktop - (2 * $notify-notification-padding-desktop);
			border-radius: $notify-notification-radius;
			opacity: .9;
			box-shadow: 0 .1rem .1rem rgba(0, 0, 0, .03), 0 .05rem 0 rgba(0, 0, 0, .03);
			animation: $notify-enter-animation-desktop $notify-speed $notify-easing forwards;

			// Last notification shouldn't have margin bottom
			&:first-child {
				margin-bottom: 0;
			}

			// When we add a new notification, animate existing down
			& + .notify-notification {
				transform: translateX($notify-area-right + $notify-notification-width-desktop);
				animation: $notify-enter-push-animation-desktop $notify-speed $notify-easing 0s forwards, $notify-enter-animation-desktop $notify-speed $notify-easing $notify-speed forwards;
			}

			// Animate exit
			&.notify-exit {
				animation: $notify-exit-animation-desktop $notify-speed $notify-easing 0s forwards, $notify-exit-pull-animation-desktop $notify-speed $notify-easing $notify-speed forwards;
			}
		}

		.notify-info {
			color: notify-text-color($notify-info);
			background-color: $notify-info;
		}

		.notify-success {
			color: notify-text-color($notify-success);
			background-color: $notify-success;
		}

		.notify-warning {
			color: notify-text-color($notify-warning);
			background-color: $notify-warning;
		}

		.notify-error {
			color: notify-text-color($notify-error);
			background-color: $notify-error;
		}

		.notify-close {
			position: absolute;
			top: .5rem;
			right: .5rem;
			width: 1.5rem;
			height: 1.5rem;
			cursor: pointer;
			background-color: rgba(#000, .2);
			border-radius: .75rem;
			transform: rotate(45deg);

			&::before {
				width: 50%;
				height: 2px;
			}

			&::after {
				width: 2px;
				height: 50%;
			}

			&::after, &::before {
				position: absolute;
				top: 50%;
				left: 50%;
				display: block;
				background-color: #fff;
				content: "";
				transform: translateX(-50%) translateY(-50%);
			}

			&:hover {
				background-color: rgba(#000, .3);
			}
		}
	}
}
